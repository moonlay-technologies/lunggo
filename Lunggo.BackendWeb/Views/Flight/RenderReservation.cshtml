@using System.Globalization
@using Lunggo.ApCommon.Payment.Constant
@model Lunggo.ApCommon.Flight.Model.FlightReservation

<div class="col-md-6">
    <div class="showback">
        <h4>Reservation Detail</h4>
        <hr />
        <table class="table table-hover table-no-border">
            <tbody>
                <tr>
                    <td>Reservation Number</td>
                    <td>@Model.RsvNo</td>
                </tr>
                <tr>
                    <td>Reservation Time</td>
                    <td>@Model.RsvTime.ToString("d MMM yyyy HH:mm:ss")</td>
                </tr>
                <tr>
                    <td>Contact Name</td>
                    <td>@Model.ContactData.Name</td>
                </tr>
                <tr>
                    <td>Contact E-mail</td>
                    <td>@Model.ContactData.Email</td>
                </tr>
                <tr>
                    <td>Contact Phone</td>
                    <td>@Model.ContactData.Phone</td>
                </tr>
                <tr>
                    <td>Contact Address</td>
                    <td>@Model.ContactData.Address</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<div class="col-md-6">
    <div class="showback">
        <h4>Payment Detail</h4>
        <hr />
        <table class="table table-hover table-no-border">
            <tbody>
                <tr>
                    <td>Total Price</td>
                    <td>@Model.PaymentInfo.FinalPrice.ToString("Rp 0,0", CultureInfo.CreateSpecificCulture("id-ID"))</td>
                </tr>
                <tr>
                    <td>Payment Method</td>
                    <td>@Model.PaymentInfo.Method.ToString()</td>
                </tr>
                <tr>
                    <td>Payment Status</td>
                    <td>
                        @switch (Model.PaymentInfo.Status)
                        {
                            case PaymentStatus.Pending:
                                <span class="label label-default">Incomplete</span><br />
                                break;
                            case PaymentStatus.Settled:
                                <span class="label label-success">Complete</span><br />
                                break;
                            case PaymentStatus.Refunded:
                                <span class="label label-info">Refund</span><br />
                                break;
                            case PaymentStatus.Cancelled:
                                <span class="label label-danger">Cancelled</span><br />
                                break;
                            case PaymentStatus.Denied:
                                <span class="label label-danger">Denied</span><br />
                                break;
                            case PaymentStatus.Expired:
                                <span class="label label-danger">Expired</span><br />
                                break;
                        }
                    </td>
                </tr>
                @if (Model.PaymentInfo.Status == PaymentStatus.Refunded)
                {
                    <tr>
                        <td>Refund Time</td>
                        <td>@Model.PaymentInfo.Refund.Time.ToString("d MMM yyyy HH:mm:ss")</td>
                    </tr>
                    <tr>
                        <td>Refund Amount</td>
                        <td>@Model.PaymentInfo.Refund.Amount.ToString("Rp 0,0", CultureInfo.CreateSpecificCulture("id-ID"))</td>
                    </tr>
                    <tr>
                        <td>Refund Bank</td>
                        <td>@Model.PaymentInfo.Refund.TargetBank</td>
                    </tr>
                    <tr>
                        <td>Refund Account</td>
                        <td>@Model.PaymentInfo.Refund.TargetAccount</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>